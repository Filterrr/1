###########################################
#
# 支持 此订阅 的工具推荐
#
# https://wiki.metacubex.one/startup/client/
#
###########################################

mixed-port: 7890
allow-lan: false
mode: rule
geodata-mode: true
log-level: info
ipv6: false
find-process-mode: strict
global-client-fingerprint: chrome
geodata-loader: memconservative
keep-alive-interval: 30
tcp-concurrent: true

dns:
  enable: true
  ipv6: false
  listen: 0.0.0.0:1053
  enhanced-mode: fake-ip
  fake-ip-range: 28.0.0.1/8
  default-nameserver:
    - https://223.6.6.6/dns-query
    - https://1.1.1.1/dns-query
  nameserver:
    - https://223.6.6.6/dns-query
    - https://1.1.1.1/dns-query

geox-url:
  geoip: "https://fastly.jsdelivr.net/gh/MetaCubeX/meta-rules-dat@release/geoip.dat"
  geosite: "https://fastly.jsdelivr.net/gh/MetaCubeX/meta-rules-dat@release/geosite.dat"
  mmdb: "https://fastly.jsdelivr.net/gh/MetaCubeX/meta-rules-dat@release/geoip.metadb"

geo-auto-update: true # 是否自动更新 geodata
geo-update-interval: 24 # 更新间隔，单位：小时

# 嗅探域名 可选配置
sniffer:
  enable: true
  ## 对 redir-host 类型识别的流量进行强制嗅探
  ## 如：Tun、Redir 和 TProxy 并 DNS 为 redir-host 皆属于
  force-dns-mapping: true
  ## 对所有未获取到域名的流量进行强制嗅探
  parse-pure-ip: true
  # 是否使用嗅探结果作为实际访问，默认 true
  # 全局配置，优先级低于 sniffer.sniff 实际配置
  override-destination: true
  sniff: # TLS 和 QUIC 默认如果不配置 ports 默认嗅探 443
    QUIC:
    #  ports: [ 443 ]
    TLS:
    #  ports: [443, 8443]

    # 默认嗅探 80
    HTTP: # 需要嗅探的端口
      ports: [80, 8080-8880]
      # 可覆盖 sniffer.override-destination
      override-destination: true
  force-domain:
    - +.v2ex.com
  ## 对嗅探结果进行跳过
  # skip-domain:
  #   - Mijia Cloud
  # 需要嗅探协议
  # 已废弃，若 sniffer.sniff 配置则此项无效
  sniffing:
    - tls
    - http
  # 强制对此域名进行嗅探

  # 仅对白名单中的端口进行嗅探，默认为 443，80
  # 已废弃，若 sniffer.sniff 配置则此项无效
  port-whitelist:
    - "80"
    - "443"
    - 8000-9999

proxy-providers:
  xiaopro1:
    type: http
    url: https://sub.cfno1.eu.org/clash?host=hk888.kh11a.link&uuid=86e0e3a3-5435-4d99-8d5f-54a124d6cb79&path=/b8a6cb3e/&protocol=vmess
    interval: 604800
    path: ./provider201.yaml
    health-check:
      enable: false
      interval: 7200
      url: http://www.gstatic.com/generate_204

  xiaopro2:
    type: http
    url: http://sub.xijingping.gay/api/sub?&host=hk888.kh11a.link&uuid=86e0e3a3-5435-4d99-8d5f-54a124d6cb79&path=/b8a6cb3e/&type=vmess
    interval: 604800
    path: ./provider202.yaml
    health-check:
      enable: false
      interval: 7200
      url: http://www.gstatic.com/generate_204

  xiaopro3:
    type: http
    url: https://sub.xijingping.gay/nthlink
    interval: 604800
    path: ./provider203.yaml
    health-check:
      enable: false
      interval: 7200
      url: http://www.gstatic.com/generate_204

  xiaopro4:
    type: http
    url: https://sub.cfno1.eu.org/sub_bulianglin
    interval: 604800
    path: ./provider204.yaml
    health-check:
      enable: false
      interval: 7200
      url: http://www.gstatic.com/generate_204


baidu: &baidu
  type: http
  port: 443
  headers:
    Host: www.baidu.com:443
    X-T5-Auth: 1997382601

CF: &CF
    type: vless
    uuid: 1ff64191-83b3-410a-86e3-74f721681a80
    tls: true
    servername: world.kh11a.link
    skip-cert-verify: false
    network: ws
    ws-opts: 
      path: /
      headers: 
        Host: world.kh11a.link

vm: &vm
    type: vmess
    uuid: 86e0e3a3-5435-4d99-8d5f-54a124d6cb79
    alterId: 0
    cipher: auto
    tls: true
    skip-cert-verify: false
    servername: hk888.kh11a.link
    network: ws
    ws-opts: 
      path: /b8a6cb3e/
      headers:
        Host: hk888.kh11a.link
        
proxies:
  - name: 🇨🇳 Baidu auto
    server: cloudnproxy.baidu.com
    <<: *baidu

  - name: 🇨🇳 电信 苏州
    server: 180.97.93.202
    <<: *baidu


  - name: 🇨🇳 电信 北京1
    server: 220.181.111.189
    <<: *baidu

  - name: 🇨🇳 电信 北京2
    server: 220.181.33.174
    <<: *baidu

  - name: 🇨🇳 电信 北京3
    server: 220.181.7.1
    <<: *baidu

  - name: 🇨🇳 电信 南京1
    server: 180.101.50.249
    <<: *baidu

  - name: 🇨🇳 电信 南京2
    server: 180.101.50.208
    <<: *baidu

  - name: 🇨🇳 联通 河北1
    server: 110.242.70.68
    <<: *baidu

  - name: 🇨🇳 联通 河北2
    server: 110.242.70.69
    <<: *baidu

  - name: 🇨🇳 联通 南京
    server: 153.3.237.117
    <<: *baidu

  - name: 🇨🇳 联通 江苏
    server: 157.0.148.53
    <<: *baidu

  - name: 🇨🇳 移动 南京
    server: 36.155.169.188
    <<: *baidu

  - name: CF
    server: www.gov.se
    port: 2087
    <<: *CF

  - name: 移动CF
    server: 104.16.32.36
    port: 443
    <<: *vm
    
proxy-groups:
  - name: 🌎 全球节点
    type: select
    proxies:
      - 🚀 百度直连
      - 移动CF
      - CF
    use:
      - xiaopro1
      - xiaopro2
      - xiaopro3
      - xiaopro4

  - name: 🚀 百度直连
    type: select
    proxies:
      - 🇨🇳 联通 河北auto
      - 🇨🇳 联通 江苏
      - 🇨🇳 联通 南京
      - 🇨🇳 电信 苏州
      - 🇨🇳 电信 北京auto
      - 🇨🇳 电信 南京auto
      - 🇨🇳 移动 南京
      - 🇨🇳 Baidu auto
      - 🎯 全球直连
      
  - name: 🎯 全球直连
    type: select
    proxies:
      - DIRECT

  - name: 🛑 全球拦截
    type: select
    proxies:
      - REJECT

  - name: 🐟 漏网之鱼
    type: relay
    proxies:
      - 🚀 百度直连
      - 🌎 全球节点

  - name: 🔘 ChatGPT
    type: relay
    proxies:
      - 🚀 百度直连
      - CF

  - name: "🇨🇳 联通 河北auto"
    type: url-test
    url: 'https://www.gstatic.com/generate_204'
    interval: 600
    lazy: true
    proxies:
      - 🇨🇳 联通 河北1
      - 🇨🇳 联通 河北2

  - name: "🇨🇳 电信 南京auto"
    type: url-test
    url: 'https://www.gstatic.com/generate_204'
    interval: 600
    lazy: true
    proxies:
      - 🇨🇳 电信 南京1
      - 🇨🇳 电信 南京2

  - name: "🇨🇳 电信 北京auto"
    type: url-test
    url: 'https://www.gstatic.com/generate_204'
    interval: 600
    lazy: true
    proxies:
      - 🇨🇳 电信 北京1
      - 🇨🇳 电信 北京2
      - 🇨🇳 电信 北京3
      
rules:
  # UDP 规则 
  - NETWORK,UDP,🛑 全球拦截
  # 广告过滤
  - geosite,category-ads-all,🛑 全球拦截
  # 分流规则
  - DOMAIN-KEYWORD,google,🐟 漏网之鱼
  - DOMAIN-KEYWORD,openai,🔘 ChatGPT
  - GEOSITE,CN,🚀 百度直连
  - GEOIP,CN,🚀 百度直连
  - MATCH,🐟 漏网之鱼
